/*! For license information please see app.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkleaderboard_v1_p1=self.webpackChunkleaderboard_v1_p1||[]).push([["app"],{"./modules/addScore.js":(e,r,t)=>{t.r(r),t.d(r,{addScore:()=>c,addScores:()=>o,refresh:()=>a});var s=t("./modules/helpers/constructor.js");const n=[],o=()=>{const e=document.querySelector(".score-list");0!==n.length&&(n.sort(((e,r)=>r.score-e.score)),e.innerHTML="",n.forEach((r=>{const t=`\n      <li class="h4 p-2 m-0">${r.name}: ${r.score}</li>\n      `;e.insertAdjacentHTML("beforeend",t)})))},a=()=>{const e=document.querySelector(".refresh");e.addEventListener("click",(()=>{0!==n.length&&(e.insertAdjacentHTML("afterbegin",'\n        <div class="alert alert-success m-0">\n          The page will be refreshed.\n        </div>\n      '),setTimeout((()=>{document.querySelector(".alert").remove()}),3e3),setTimeout((()=>{window.location.reload()}),3e3))}))},c=()=>{const e=document.querySelector("form");e.addEventListener("submit",(r=>{r.preventDefault();const{name:t,score:a}=e.elements;/^[a-zA-Z\s/.]+$/.test(t.value)?/^[a-zA-Z]+$/.test(a.value)?(e.insertAdjacentHTML("afterend",'\n        <div class="alert alert-danger">\n          <strong>Error!</strong> Score must be a number.\n        </div>\n      '),setTimeout((()=>{document.querySelector(".alert").remove()}),3e3)):(e.insertAdjacentHTML("afterend",'\n        <div class="alert alert-success">\n          <strong>Success!</strong> Score was added and sorted by score.\n        </div>\n      '),setTimeout((()=>{document.querySelector(".alert").remove()}),3e3),n.push(new s.default(t.value,a.value))):(e.insertAdjacentHTML("afterend",'\n        <div class="alert alert-danger">\n          <strong>Error!</strong> Name can contain only letters.\n        </div>\n      '),setTimeout((()=>{document.querySelector(".alert").remove()}),3e3)),t.value="",a.value="",o()}))}},"./modules/app.js":(e,r,t)=>{t.r(r);var s=t("./modules/addScore.js");(0,s.addScore)(),(0,s.refresh)()},"./modules/helpers/constructor.js":(e,r,t)=>{t.r(r),t.d(r,{default:()=>s});class s{constructor(e,r){this.name=e,this.score=r}}}},e=>{e(e.s="./modules/app.js")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiO21QQUVBLE1BQU1BLEVBQVMsR0FFVEMsRUFBWSxLQUNoQixNQUFNQyxFQUFZQyxTQUFTQyxjQUFjLGVBQ25CLElBQWxCSixFQUFPSyxTQUNUTCxFQUFPTSxNQUFLLENBQUNDLEVBQUdDLElBQU1BLEVBQUVDLE1BQVFGLEVBQUVFLFFBQ2xDUCxFQUFVUSxVQUFZLEdBQ3RCVixFQUFPVyxTQUFTQyxJQUNkLE1BQU1ILEVBQVEsa0NBQ1dHLEVBQUtDLFNBQVNELEVBQUtILHFCQUU1Q1AsRUFBVVksbUJBQW1CLFlBQWFMLEVBQU0sSUFFcEQsRUFHSU0sRUFBVSxLQUNkLE1BQU1BLEVBQVVaLFNBQVNDLGNBQWMsWUFDdkNXLEVBQVFDLGlCQUFpQixTQUFTLEtBQ1YsSUFBbEJoQixFQUFPSyxTQUNUVSxFQUFRRCxtQkFBbUIsYUFBYyxrSEFLekNHLFlBQVcsS0FDVGQsU0FBU0MsY0FBYyxVQUFVYyxRQUFRLEdBQ3hDLEtBQ0hELFlBQVcsS0FDVEUsT0FBT0MsU0FBU0MsUUFBUSxHQUN2QixLQUNMLEdBQ0EsRUFHRUMsRUFBVyxLQUNmLE1BQU1DLEVBQU9wQixTQUFTQyxjQUFjLFFBQ3BDbUIsRUFBS1AsaUJBQWlCLFVBQVdRLElBQy9CQSxFQUFFQyxpQkFDRixNQUFNLEtBQUVaLEVBQUksTUFBRUosR0FBVWMsRUFBS0csU0FDeEIsa0JBQWtCQyxLQUFLZCxFQUFLZSxPQVN0QixjQUFjRCxLQUFLbEIsRUFBTW1CLFFBQ2xDTCxFQUFLVCxtQkFBbUIsV0FBWSxpSUFLcENHLFlBQVcsS0FDVGQsU0FBU0MsY0FBYyxVQUFVYyxRQUFRLEdBQ3hDLE9BRUhLLEVBQUtULG1CQUFtQixXQUFZLGlKQUtwQ0csWUFBVyxLQUNUZCxTQUFTQyxjQUFjLFVBQVVjLFFBQVEsR0FDeEMsS0FDSGxCLEVBQU82QixLQUFLLElBQUksVUFBTWhCLEVBQUtlLE1BQU9uQixFQUFNbUIsVUExQnhDTCxFQUFLVCxtQkFBbUIsV0FBWSx3SUFLcENHLFlBQVcsS0FDVGQsU0FBU0MsY0FBYyxVQUFVYyxRQUFRLEdBQ3hDLE1BcUJMTCxFQUFLZSxNQUFRLEdBQ2JuQixFQUFNbUIsTUFBUSxHQUNkM0IsR0FBVyxHQUNYLHlFQ3hFSixJQUFBcUIsYUFDQSxJQUFBUCx1RkNIZSxNQUFNZSxFQUNuQkMsWUFBWWxCLEVBQU1KLEdBQ2hCdUIsS0FBS25CLEtBQU9BLEVBQ1ptQixLQUFLdkIsTUFBUUEsQ0FDZiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWRlcmJvYXJkLXYxX3AxLy4vbW9kdWxlcy9hZGRTY29yZS5qcyIsIndlYnBhY2s6Ly9sZWFkZXJib2FyZC12MV9wMS8uL21vZHVsZXMvYXBwLmpzIiwid2VicGFjazovL2xlYWRlcmJvYXJkLXYxX3AxLy4vbW9kdWxlcy9oZWxwZXJzL2NvbnN0cnVjdG9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTY29yZSBmcm9tICcuL2hlbHBlcnMvY29uc3RydWN0b3InO1xuXG5jb25zdCBzY29yZXMgPSBbXTtcblxuY29uc3QgYWRkU2NvcmVzID0gKCkgPT4ge1xuICBjb25zdCBzY29yZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2NvcmUtbGlzdCcpO1xuICBpZiAoc2NvcmVzLmxlbmd0aCAhPT0gMCkge1xuICAgIHNjb3Jlcy5zb3J0KChhLCBiKSA9PiBiLnNjb3JlIC0gYS5zY29yZSk7XG4gICAgc2NvcmVMaXN0LmlubmVySFRNTCA9ICcnO1xuICAgIHNjb3Jlcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICBjb25zdCBzY29yZSA9IGBcbiAgICAgIDxsaSBjbGFzcz1cImg0IHAtMiBtLTBcIj4ke2l0ZW0ubmFtZX06ICR7aXRlbS5zY29yZX08L2xpPlxuICAgICAgYDtcbiAgICAgIHNjb3JlTGlzdC5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIHNjb3JlKTtcbiAgICB9KTtcbiAgfVxufTtcblxuY29uc3QgcmVmcmVzaCA9ICgpID0+IHtcbiAgY29uc3QgcmVmcmVzaCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZWZyZXNoJyk7XG4gIHJlZnJlc2guYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgaWYgKHNjb3Jlcy5sZW5ndGggIT09IDApIHtcbiAgICAgIHJlZnJlc2guaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgYFxuICAgICAgICA8ZGl2IGNsYXNzPVwiYWxlcnQgYWxlcnQtc3VjY2VzcyBtLTBcIj5cbiAgICAgICAgICBUaGUgcGFnZSB3aWxsIGJlIHJlZnJlc2hlZC5cbiAgICAgICAgPC9kaXY+XG4gICAgICBgKTtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWxlcnQnKS5yZW1vdmUoKTtcbiAgICAgIH0sIDMwMDApO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgIH0sIDMwMDApO1xuICAgIH1cbiAgfSk7XG59O1xuXG5jb25zdCBhZGRTY29yZSA9ICgpID0+IHtcbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvcm0nKTtcbiAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB7IG5hbWUsIHNjb3JlIH0gPSBmb3JtLmVsZW1lbnRzO1xuICAgIGlmICghL15bYS16QS1aXFxzLy5dKyQvLnRlc3QobmFtZS52YWx1ZSkpIHtcbiAgICAgIGZvcm0uaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmVuZCcsIGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LWRhbmdlclwiPlxuICAgICAgICAgIDxzdHJvbmc+RXJyb3IhPC9zdHJvbmc+IE5hbWUgY2FuIGNvbnRhaW4gb25seSBsZXR0ZXJzLlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGApO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGVydCcpLnJlbW92ZSgpO1xuICAgICAgfSwgMzAwMCk7XG4gICAgfSBlbHNlIGlmICgvXlthLXpBLVpdKyQvLnRlc3Qoc2NvcmUudmFsdWUpKSB7XG4gICAgICBmb3JtLmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJlbmQnLCBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXJcIj5cbiAgICAgICAgICA8c3Ryb25nPkVycm9yITwvc3Ryb25nPiBTY29yZSBtdXN0IGJlIGEgbnVtYmVyLlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGApO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGVydCcpLnJlbW92ZSgpO1xuICAgICAgfSwgMzAwMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvcm0uaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmVuZCcsIGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LXN1Y2Nlc3NcIj5cbiAgICAgICAgICA8c3Ryb25nPlN1Y2Nlc3MhPC9zdHJvbmc+IFNjb3JlIHdhcyBhZGRlZCBhbmQgc29ydGVkIGJ5IHNjb3JlLlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGApO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGVydCcpLnJlbW92ZSgpO1xuICAgICAgfSwgMzAwMCk7XG4gICAgICBzY29yZXMucHVzaChuZXcgU2NvcmUobmFtZS52YWx1ZSwgc2NvcmUudmFsdWUpKTtcbiAgICB9XG4gICAgbmFtZS52YWx1ZSA9ICcnO1xuICAgIHNjb3JlLnZhbHVlID0gJyc7XG4gICAgYWRkU2NvcmVzKCk7XG4gIH0pO1xufTtcblxuZXhwb3J0IHsgYWRkU2NvcmUsIGFkZFNjb3JlcywgcmVmcmVzaCB9O1xuIiwiaW1wb3J0IHsgYWRkU2NvcmUsIHJlZnJlc2ggfSBmcm9tICcuL2FkZFNjb3JlJztcblxuYWRkU2NvcmUoKTtcbnJlZnJlc2goKTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTY29yZSB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIHNjb3JlKSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLnNjb3JlID0gc2NvcmU7XG4gIH1cbn0iXSwibmFtZXMiOlsic2NvcmVzIiwiYWRkU2NvcmVzIiwic2NvcmVMaXN0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwibGVuZ3RoIiwic29ydCIsImEiLCJiIiwic2NvcmUiLCJpbm5lckhUTUwiLCJmb3JFYWNoIiwiaXRlbSIsIm5hbWUiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJyZWZyZXNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNldFRpbWVvdXQiLCJyZW1vdmUiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlbG9hZCIsImFkZFNjb3JlIiwiZm9ybSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImVsZW1lbnRzIiwidGVzdCIsInZhbHVlIiwicHVzaCIsIlNjb3JlIiwiY29uc3RydWN0b3IiLCJ0aGlzIl0sInNvdXJjZVJvb3QiOiIifQ==