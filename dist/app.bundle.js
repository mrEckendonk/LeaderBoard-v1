/*! For license information please see app.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkleaderboard_v1_p1=self.webpackChunkleaderboard_v1_p1||[]).push([["app"],{"./modules/API/API_Data.js":(e,s,t)=>{t.r(s),t.d(s,{gameIdAPI:()=>a,urlAPI:()=>r});const r="https://us-central1-js-capstone-backend.cloudfunctions.net/api/games",a="uwB8nJdet2WNjIhayB6j"},"./modules/API/getAPI.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>a});var r=t("./modules/API/API_Data.js");const a=async()=>{const e=await fetch(`${r.urlAPI}/${r.gameIdAPI}/scores`),s=await e.json();return s.result.sort(((e,s)=>s.score-e.score)),s}},"./modules/API/postAPI.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>a});var r=t("./modules/API/API_Data.js");const a=async e=>fetch(`${r.urlAPI}/${r.gameIdAPI}/scores/`,{method:"POST",body:JSON.stringify(e),headers:{"Content-type":"application/json; charset=UTF-8"}}).json},"./modules/addScore.js":(e,s,t)=>{t.r(s),t.d(s,{addScore:()=>c,addScores:()=>n,refresh:()=>d});var r=t("./modules/helpers/constructor.js"),a=t("./modules/API/getAPI.js"),o=t("./modules/API/postAPI.js");const n=async()=>{const e=document.querySelector(".score-list"),s=await(0,a.default)().then((e=>e));0!==s.length&&(e.innerHTML="",s.result.forEach((s=>{const t=`\n      <li class="h4 p-2 m-0">${s.user}: ${s.score}</li>\n      `;e.insertAdjacentHTML("beforeend",t)})))},d=()=>{document.querySelector(".refresh").addEventListener("click",(()=>{window.location.reload()}))},c=()=>{const e=document.querySelector("form");e.addEventListener("submit",(async s=>{s.preventDefault();const{user:t,score:a}=e.elements;/^[a-zA-Z\s/.]+$/.test(t.value)?/^[a-zA-Z]+$/.test(a.value)?(e.insertAdjacentHTML("afterend",'\n        <div class="alert alert-danger">\n          <strong>Error!</strong> Score must be a number.\n        </div>\n      '),setTimeout((()=>{document.querySelector(".alert").remove()}),3e3)):(e.insertAdjacentHTML("afterend",'\n        <div class="alert alert-success">\n          <strong>Success!</strong> Score was added and sorted by score.\n        </div>\n      '),setTimeout((()=>{document.querySelector(".alert").remove()}),3e3)):(e.insertAdjacentHTML("afterend",'\n        <div class="alert alert-danger Helvetica Neue">\n          <strong>Error!</strong> Name can contain only letters.\n        </div>\n      '),setTimeout((()=>{document.querySelector(".alert").remove()}),3e3));const n=new r.default(t.value,a.value);await(0,o.default)(n),t.value="",a.value=""}))}},"./modules/app.js":(e,s,t)=>{t.r(s);var r=t("./modules/addScore.js");(0,r.addScores)(),(0,r.addScore)(),(0,r.refresh)()},"./modules/helpers/constructor.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});class r{constructor(e,s){this.user=e,this.score=s}}}},e=>{e(e.s="./modules/app.js")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzJMQUFBLE1BQU1BLEVBQVMsdUVBQ1RDLEVBQVksK0hDQ2xCLE1BQU1DLEVBQWtCQyxVQUN0QixNQUFNQyxRQUFpQkMsTUFBTSxHQUFHLEVBQUFMLFVBQVUsRUFBQUMsb0JBQ3BDSyxRQUFhRixFQUFTRyxPQUU1QixPQURBRCxFQUFLRSxPQUFPQyxNQUFLLENBQUNDLEVBQUdDLElBQU1BLEVBQUVDLE1BQVFGLEVBQUVFLFFBQ2hDTixDQUFJLDJHQ0piLE1BQU1PLEVBQW1CVixNQUFPVyxHQUNoQlQsTUFBTSxHQUFHLEVBQUFMLFVBQVUsRUFBQUMsb0JBQXFCLENBQ3BEYyxPQUFRLE9BQ1JDLEtBQU1DLEtBQUtDLFVBQVVKLEdBQ3JCSyxRQUFTLENBQ1AsZUFBZ0IscUNBR1BaLGdOQ05mLE1BQU1hLEVBQVlqQixVQUNoQixNQUFNa0IsRUFBWUMsU0FBU0MsY0FBYyxlQUNuQ0MsUUFBZSxlQUFrQkMsTUFBTWpCLEdBQVdBLElBQ2xDLElBQWxCZ0IsRUFBT0UsU0FDVEwsRUFBVU0sVUFBWSxHQUN0QkgsRUFBT2hCLE9BQU9vQixTQUFTQyxJQUNyQixNQUFNakIsRUFBUSxrQ0FDV2lCLEVBQUtDLFNBQVNELEVBQUtqQixxQkFFNUNTLEVBQVVVLG1CQUFtQixZQUFhbkIsRUFBTSxJQUVwRCxFQUdJb0IsRUFBVSxLQUNFVixTQUFTQyxjQUFjLFlBQy9CVSxpQkFBaUIsU0FBUyxLQUNoQ0MsT0FBT0MsU0FBU0MsUUFBUSxHQUN4QixFQUdFdEIsRUFBVyxLQUNmLE1BQU11QixFQUFPZixTQUFTQyxjQUFjLFFBQ3BDYyxFQUFLSixpQkFBaUIsVUFBVTlCLE1BQU9tQyxJQUNyQ0EsRUFBRUMsaUJBQ0YsTUFBTSxLQUFFVCxFQUFJLE1BQUVsQixHQUFVeUIsRUFBS0csU0FDeEIsa0JBQWtCQyxLQUFLWCxFQUFLWSxPQVN0QixjQUFjRCxLQUFLN0IsRUFBTThCLFFBQ2xDTCxFQUFLTixtQkFBbUIsV0FBWSxpSUFLcENZLFlBQVcsS0FDVHJCLFNBQVNDLGNBQWMsVUFBVXFCLFFBQVEsR0FDeEMsT0FFSFAsRUFBS04sbUJBQW1CLFdBQVksaUpBS3BDWSxZQUFXLEtBQ1RyQixTQUFTQyxjQUFjLFVBQVVxQixRQUFRLEdBQ3hDLE9BekJIUCxFQUFLTixtQkFBbUIsV0FBWSx1SkFLcENZLFlBQVcsS0FDVHJCLFNBQVNDLGNBQWMsVUFBVXFCLFFBQVEsR0FDeEMsTUFvQkwsTUFBTTlCLEVBQVcsSUFBSSxVQUFNZ0IsRUFBS1ksTUFBTzlCLEVBQU04QixhQUN2QyxhQUFpQjVCLEdBQ3ZCZ0IsRUFBS1ksTUFBUSxHQUNiOUIsRUFBTThCLE1BQVEsRUFBRSxHQUNoQix5RUM1REosSUFBQXRCLGNBQ0EsSUFBQU4sYUFDQSxJQUFBa0IsdUZDSmUsTUFBTWEsRUFDbkJDLFlBQVloQixFQUFNbEIsR0FDaEJtQyxLQUFLakIsS0FBT0EsRUFDWmlCLEtBQUtuQyxNQUFRQSxDQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhZGVyYm9hcmQtdjFfcDEvLi9tb2R1bGVzL0FQSS9BUElfRGF0YS5qcyIsIndlYnBhY2s6Ly9sZWFkZXJib2FyZC12MV9wMS8uL21vZHVsZXMvQVBJL2dldEFQSS5qcyIsIndlYnBhY2s6Ly9sZWFkZXJib2FyZC12MV9wMS8uL21vZHVsZXMvQVBJL3Bvc3RBUEkuanMiLCJ3ZWJwYWNrOi8vbGVhZGVyYm9hcmQtdjFfcDEvLi9tb2R1bGVzL2FkZFNjb3JlLmpzIiwid2VicGFjazovL2xlYWRlcmJvYXJkLXYxX3AxLy4vbW9kdWxlcy9hcHAuanMiLCJ3ZWJwYWNrOi8vbGVhZGVyYm9hcmQtdjFfcDEvLi9tb2R1bGVzL2hlbHBlcnMvY29uc3RydWN0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdXJsQVBJID0gJ2h0dHBzOi8vdXMtY2VudHJhbDEtanMtY2Fwc3RvbmUtYmFja2VuZC5jbG91ZGZ1bmN0aW9ucy5uZXQvYXBpL2dhbWVzJztcbmNvbnN0IGdhbWVJZEFQSSA9ICd1d0I4bkpkZXQyV05qSWhheUI2aic7XG5cbmV4cG9ydCB7IHVybEFQSSwgZ2FtZUlkQVBJIH07XG4iLCJpbXBvcnQgeyB1cmxBUEksIGdhbWVJZEFQSSB9IGZyb20gJy4vQVBJX0RhdGEnO1xuXG5jb25zdCBnZXRTY29yZUFuZE5hbWUgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dXJsQVBJfS8ke2dhbWVJZEFQSX0vc2NvcmVzYCk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIGRhdGEucmVzdWx0LnNvcnQoKGEsIGIpID0+IGIuc2NvcmUgLSBhLnNjb3JlKTtcbiAgcmV0dXJuIGRhdGE7XG59O1xuXG5leHBvcnQgeyBnZXRTY29yZUFuZE5hbWUgYXMgZGVmYXVsdCB9OyIsImltcG9ydCB7IHVybEFQSSwgZ2FtZUlkQVBJIH0gZnJvbSAnLi9BUElfRGF0YSc7XG5cbmNvbnN0IHBvc3RTY29yZUFuZE5hbWUgPSBhc3luYyAoYWRkU2NvcmUpID0+IHtcbiAgY29uc3Qgc2NvcmUgPSBmZXRjaChgJHt1cmxBUEl9LyR7Z2FtZUlkQVBJfS9zY29yZXMvYCwge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGFkZFNjb3JlKSxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnLFxuICAgIH0sXG4gIH0pO1xuICByZXR1cm4gc2NvcmUuanNvbjtcbn07XG5cbmV4cG9ydCB7IHBvc3RTY29yZUFuZE5hbWUgYXMgZGVmYXVsdCB9O1xuIiwiaW1wb3J0IFNjb3JlIGZyb20gJy4vaGVscGVycy9jb25zdHJ1Y3Rvcic7XG5pbXBvcnQgZ2V0U2NvcmVBbmROYW1lIGZyb20gJy4vQVBJL2dldEFQSSc7XG5pbXBvcnQgcG9zdFNjb3JlQW5kTmFtZSBmcm9tICcuL0FQSS9wb3N0QVBJJztcblxuY29uc3QgYWRkU2NvcmVzID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBzY29yZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2NvcmUtbGlzdCcpO1xuICBjb25zdCBzY29yZXMgPSBhd2FpdCBnZXRTY29yZUFuZE5hbWUoKS50aGVuKChyZXN1bHQpID0+IHJlc3VsdCk7XG4gIGlmIChzY29yZXMubGVuZ3RoICE9PSAwKSB7XG4gICAgc2NvcmVMaXN0LmlubmVySFRNTCA9ICcnO1xuICAgIHNjb3Jlcy5yZXN1bHQuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3Qgc2NvcmUgPSBgXG4gICAgICA8bGkgY2xhc3M9XCJoNCBwLTIgbS0wXCI+JHtpdGVtLnVzZXJ9OiAke2l0ZW0uc2NvcmV9PC9saT5cbiAgICAgIGA7XG4gICAgICBzY29yZUxpc3QuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCBzY29yZSk7XG4gICAgfSk7XG4gIH1cbn07XG5cbmNvbnN0IHJlZnJlc2ggPSAoKSA9PiB7XG4gIGNvbnN0IHJlZnJlc2ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVmcmVzaCcpO1xuICByZWZyZXNoLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgfSk7XG59O1xuXG5jb25zdCBhZGRTY29yZSA9ICgpID0+IHtcbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvcm0nKTtcbiAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBhc3luYyAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB7IHVzZXIsIHNjb3JlIH0gPSBmb3JtLmVsZW1lbnRzO1xuICAgIGlmICghL15bYS16QS1aXFxzLy5dKyQvLnRlc3QodXNlci52YWx1ZSkpIHtcbiAgICAgIGZvcm0uaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmVuZCcsIGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LWRhbmdlciBIZWx2ZXRpY2EgTmV1ZVwiPlxuICAgICAgICAgIDxzdHJvbmc+RXJyb3IhPC9zdHJvbmc+IE5hbWUgY2FuIGNvbnRhaW4gb25seSBsZXR0ZXJzLlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGApO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGVydCcpLnJlbW92ZSgpO1xuICAgICAgfSwgMzAwMCk7XG4gICAgfSBlbHNlIGlmICgvXlthLXpBLVpdKyQvLnRlc3Qoc2NvcmUudmFsdWUpKSB7XG4gICAgICBmb3JtLmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJlbmQnLCBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXJcIj5cbiAgICAgICAgICA8c3Ryb25nPkVycm9yITwvc3Ryb25nPiBTY29yZSBtdXN0IGJlIGEgbnVtYmVyLlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGApO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGVydCcpLnJlbW92ZSgpO1xuICAgICAgfSwgMzAwMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvcm0uaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmVuZCcsIGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LXN1Y2Nlc3NcIj5cbiAgICAgICAgICA8c3Ryb25nPlN1Y2Nlc3MhPC9zdHJvbmc+IFNjb3JlIHdhcyBhZGRlZCBhbmQgc29ydGVkIGJ5IHNjb3JlLlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGApO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGVydCcpLnJlbW92ZSgpO1xuICAgICAgfSwgMzAwMCk7XG4gICAgfVxuICAgIGNvbnN0IGFkZFNjb3JlID0gbmV3IFNjb3JlKHVzZXIudmFsdWUsIHNjb3JlLnZhbHVlKTtcbiAgICBhd2FpdCBwb3N0U2NvcmVBbmROYW1lKGFkZFNjb3JlKTtcbiAgICB1c2VyLnZhbHVlID0gJyc7XG4gICAgc2NvcmUudmFsdWUgPSAnJztcbiAgfSk7XG59O1xuXG5leHBvcnQgeyBhZGRTY29yZSwgYWRkU2NvcmVzLCByZWZyZXNoIH07XG4iLCJpbXBvcnQgeyBhZGRTY29yZXMsIGFkZFNjb3JlLCByZWZyZXNoIH0gZnJvbSAnLi9hZGRTY29yZSc7XG5cbmFkZFNjb3JlcygpO1xuYWRkU2NvcmUoKTtcbnJlZnJlc2goKTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTY29yZSB7XG4gIGNvbnN0cnVjdG9yKHVzZXIsIHNjb3JlKSB7XG4gICAgdGhpcy51c2VyID0gdXNlcjtcbiAgICB0aGlzLnNjb3JlID0gc2NvcmU7XG4gIH1cbn0iXSwibmFtZXMiOlsidXJsQVBJIiwiZ2FtZUlkQVBJIiwiZ2V0U2NvcmVBbmROYW1lIiwiYXN5bmMiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJyZXN1bHQiLCJzb3J0IiwiYSIsImIiLCJzY29yZSIsInBvc3RTY29yZUFuZE5hbWUiLCJhZGRTY29yZSIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaGVhZGVycyIsImFkZFNjb3JlcyIsInNjb3JlTGlzdCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNjb3JlcyIsInRoZW4iLCJsZW5ndGgiLCJpbm5lckhUTUwiLCJmb3JFYWNoIiwiaXRlbSIsInVzZXIiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJyZWZyZXNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVsb2FkIiwiZm9ybSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImVsZW1lbnRzIiwidGVzdCIsInZhbHVlIiwic2V0VGltZW91dCIsInJlbW92ZSIsIlNjb3JlIiwiY29uc3RydWN0b3IiLCJ0aGlzIl0sInNvdXJjZVJvb3QiOiIifQ==